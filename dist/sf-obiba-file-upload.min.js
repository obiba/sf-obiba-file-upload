angular.module("sfObibaFileUploadTemplates",[]).run(["$templateCache",function(e){e.put("src/templates/sf-obiba-file-upload.html",'<div class="form-group"\n     ng-controller="sfObibaFileUploadController"\n     ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"\n     schema-validate="form"\n     sf-field-model>\n  <label ng-if="!form.notitle" class="control-label" >{{form.title}}</label>\n\n  <div>\n    <attachment-input ng-if="!form.readonly"\n                      sf-field-model="replaceAll"\n                      files="$$value$$.obibaFiles"\n                      multiple="form.schema.multiple"></attachment-input>\n\n    <attachment-list ng-if="form.readonly"\n                     empty-message="form.emptyMessage"\n                     href-builder="getDownloadUrl"\n                     files="$$value$$.obibaFiles"\n                     sf-field-model="replaceAll"></attachment-list>\n\n    <span class="help-block" sf-message="form.helpvalue"></span>\n  </div>\n</div>')}]),angular.module("sfObibaFileUpload",["schemaForm","sfObibaFileUploadTemplates","ngObibaMica"]).provider("sfObibaFileUploadOptions",function(){function e(e,a){var i=this;i.options=e,i.validationMessages=i.options.validationMessages,i.tr=function(e,i){return a.translate(e,i)}}var a=this,i={validationMessages:{missingFiles:null,minItems:null}};a.getOptions=function(){return angular.copy(i)},a.setValidationMessageKey=function(e,a){i.validationMessages.hasOwnProperty(e)&&(i.validationMessages[e]=a)},a.$get=["LocaleStringUtils",function(i){return new e(a.getOptions(),i)}]}).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider","sfBuilderProvider",function(e,a,i,l){var o=function(a,l,o){if("object"===l.type&&"obibaFiles"===l.format){var s=e.stdFormObj(a,l,o);return s.key=o.path,s.type="obibaFileUpload",s.$validators={missingFiles:function(e){return e&&o.required?e.obibaFiles&&e.obibaFiles.length>0:!0},minItems:function(e){return e&&l.minItems?e.obibaFiles&&e.obibaFiles.length>=l.minItems:!0}},o.lookup[i.stringify(o.path)]=s,s}};e.defaults.object.unshift(o),a.defineAddOn("bootstrapDecorator","obibaFileUpload","src/templates/sf-obiba-file-upload.html",l.stdBuilders)}]).controller("sfObibaFileUploadController",["$scope","ngObibaMicaUrl","sfObibaFileUploadOptions",function(e,a,i){e.getDownloadUrl=function(e){return a.getUrl("SchemaFormAttachmentDownloadResource").replace(":path",e.path).replace(":attachmentName",e.fileName).replace(":attachmentId",e.id).replace("//","/")},e.$watch("form",function(){var a=e.form.schema;a.minItems&&(a.multiple=!0);var l=angular.isDefined(e.form.readonly)&&e.form.readonly===!0;e.form.disableErrorState=l,e.form.disableSuccessState=l,e.form.validationMessage||(e.form.validationMessage={}),e.form.validationMessage.missingFiles||(e.form.validationMessage.missingFiles=i.tr(i.validationMessages.missingFiles,null)),e.form.validationMessage.minItems||(e.form.validationMessage.minItems=i.tr(i.validationMessages.minItems,[a.minItems]))}),e.$watch("ngModel.$modelValue",function(){e.ngModel.$validate?(e.ngModel.$options=e.ngModel.$options||{},e.ngModel.$options={allowInvalid:!0},e.ngModel.$validate(),e.ngModel.$invalid&&(e.ngModel.$dirty=!0,e.ngModel.$pristine=!1)):e.ngModel.$setViewValue(ngModel.$viewValue)},!0)}]);